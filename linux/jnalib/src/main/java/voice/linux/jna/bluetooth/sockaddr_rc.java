package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * RFCOMM socket address<br>
 * <i>native declaration : bluetooth\rfcomm.h:8</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sockaddr_rc extends Structure {
	/** C type : sa_family_t */
	public short rc_family;
	/** C type : bdaddr_t */
	public bdaddr_t rc_bdaddr;
	public byte rc_channel;
	public sockaddr_rc() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("rc_family", "rc_bdaddr", "rc_channel");
	}
	/**
	 * @param rc_family C type : sa_family_t<br>
	 * @param rc_bdaddr C type : bdaddr_t
	 */
	public sockaddr_rc(short rc_family, bdaddr_t rc_bdaddr, byte rc_channel) {
		super();
		this.rc_family = rc_family;
		this.rc_bdaddr = rc_bdaddr;
		this.rc_channel = rc_channel;
	}
	public sockaddr_rc(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends sockaddr_rc implements Structure.ByReference {
		
	};
	public static class ByValue extends sockaddr_rc implements Structure.ByValue {
		
	};
}
