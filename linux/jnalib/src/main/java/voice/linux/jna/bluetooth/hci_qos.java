package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class hci_qos extends Structure {
	/** 1 = best effort */
	public byte service_type;
	/** Byte per seconds */
	public int token_rate;
	/** Byte per seconds */
	public int peak_bandwidth;
	/** Microseconds */
	public int latency;
	/** Microseconds */
	public int delay_variation;
	public hci_qos() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("service_type", "token_rate", "peak_bandwidth", "latency", "delay_variation");
	}
	/**
	 * @param service_type 1 = best effort<br>
	 * @param token_rate Byte per seconds<br>
	 * @param peak_bandwidth Byte per seconds<br>
	 * @param latency Microseconds<br>
	 * @param delay_variation Microseconds
	 */
	public hci_qos(byte service_type, int token_rate, int peak_bandwidth, int latency, int delay_variation) {
		super();
		this.service_type = service_type;
		this.token_rate = token_rate;
		this.peak_bandwidth = peak_bandwidth;
		this.latency = latency;
		this.delay_variation = delay_variation;
	}
	public hci_qos(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends hci_qos implements Structure.ByReference {
		
	};
	public static class ByValue extends hci_qos implements Structure.ByValue {
		
	};
}
