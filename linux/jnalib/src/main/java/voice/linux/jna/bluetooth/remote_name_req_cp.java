package voice.linux.jna.bluetooth;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class remote_name_req_cp extends Structure<remote_name_req_cp, remote_name_req_cp.ByValue, remote_name_req_cp.ByReference > {
	/** C type : bdaddr_t */
	public bdaddr_t bdaddr;
	public byte pscan_rep_mode;
	public byte pscan_mode;
	public short clock_offset;
	public remote_name_req_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("bdaddr", "pscan_rep_mode", "pscan_mode", "clock_offset");
	}
	/** @param bdaddr C type : bdaddr_t */
	public remote_name_req_cp(bdaddr_t bdaddr, byte pscan_rep_mode, byte pscan_mode, short clock_offset) {
		super();
		this.bdaddr = bdaddr;
		this.pscan_rep_mode = pscan_rep_mode;
		this.pscan_mode = pscan_mode;
		this.clock_offset = clock_offset;
	}
	public remote_name_req_cp(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected remote_name_req_cp newInstance() { return new remote_name_req_cp(); }
	public static remote_name_req_cp[] newArray(int arrayLength) {
		return Structure.newArray(remote_name_req_cp.class, arrayLength);
	}
	public static class ByReference extends remote_name_req_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends remote_name_req_cp implements Structure.ByValue {
		
	};
}
