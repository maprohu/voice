package voice.linux.jna.bluetooth;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\bluetooth.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class bdaddr_t extends Structure<bdaddr_t, bdaddr_t.ByValue, bdaddr_t.ByReference > {
	/** C type : uint8_t[6] */
	public byte[] b = new byte[6];
	public bdaddr_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("b");
	}
	/** @param b C type : uint8_t[6] */
	public bdaddr_t(byte b[]) {
		super();
		if ((b.length != this.b.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.b = b;
	}
	public bdaddr_t(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected bdaddr_t newInstance() { return new bdaddr_t(); }
	public static bdaddr_t[] newArray(int arrayLength) {
		return Structure.newArray(bdaddr_t.class, arrayLength);
	}
	public static class ByReference extends bdaddr_t implements Structure.ByReference {
		
	};
	public static class ByValue extends bdaddr_t implements Structure.ByValue {
		
	};
}
