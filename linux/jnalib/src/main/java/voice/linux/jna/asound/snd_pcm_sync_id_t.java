package voice.linux.jna.asound;
import com.sun.jna.Pointer;
import com.sun.jna.Union;
/**
 * <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class snd_pcm_sync_id_t extends Union {
	/** C type : unsigned char[16] */
	public byte[] id = new byte[16];
	/** C type : unsigned short[8] */
	public short[] id16 = new short[8];
	/** C type : unsigned int[4] */
	public int[] id32 = new int[4];
	public snd_pcm_sync_id_t() {
		super();
	}
	/** @param id C type : unsigned char[16] */
	public snd_pcm_sync_id_t(byte id[]) {
		super();
		if ((id.length != this.id.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id = id;
		setType(byte[].class);
	}
	/** @param id16 C type : unsigned short[8] */
	public snd_pcm_sync_id_t(short id16[]) {
		super();
		if ((id16.length != this.id16.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id16 = id16;
		setType(short[].class);
	}
	/** @param id32 C type : unsigned int[4] */
	public snd_pcm_sync_id_t(int id32[]) {
		super();
		if ((id32.length != this.id32.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id32 = id32;
		setType(int[].class);
	}
	public snd_pcm_sync_id_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends snd_pcm_sync_id_t implements com.sun.jna.Structure.ByReference {
		
	};
	public static class ByValue extends snd_pcm_sync_id_t implements com.sun.jna.Structure.ByValue {
		
	};
}
