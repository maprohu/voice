package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class inquiry_info_with_rssi extends Structure {
	/** C type : bdaddr_t */
	public bdaddr_t bdaddr;
	public byte pscan_rep_mode;
	public byte pscan_period_mode;
	/** C type : uint8_t[3] */
	public byte[] dev_class = new byte[3];
	public short clock_offset;
	public byte rssi;
	public inquiry_info_with_rssi() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("bdaddr", "pscan_rep_mode", "pscan_period_mode", "dev_class", "clock_offset", "rssi");
	}
	/**
	 * @param bdaddr C type : bdaddr_t<br>
	 * @param dev_class C type : uint8_t[3]
	 */
	public inquiry_info_with_rssi(bdaddr_t bdaddr, byte pscan_rep_mode, byte pscan_period_mode, byte dev_class[], short clock_offset, byte rssi) {
		super();
		this.bdaddr = bdaddr;
		this.pscan_rep_mode = pscan_rep_mode;
		this.pscan_period_mode = pscan_period_mode;
		if ((dev_class.length != this.dev_class.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dev_class = dev_class;
		this.clock_offset = clock_offset;
		this.rssi = rssi;
	}
	public inquiry_info_with_rssi(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends inquiry_info_with_rssi implements Structure.ByReference {
		
	};
	public static class ByValue extends inquiry_info_with_rssi implements Structure.ByValue {
		
	};
}
