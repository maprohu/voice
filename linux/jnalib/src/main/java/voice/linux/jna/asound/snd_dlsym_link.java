package voice.linux.jna.asound;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * do not print warning (gcc) when function parameter is not used<br>
 * <i>native declaration : ..\voice\local\headers\\usr\include\alsa\global.h:34</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class snd_dlsym_link extends Structure {
	/** C type : snd_dlsym_link* */
	public snd_dlsym_link.ByReference next;
	/** C type : const char* */
	public Pointer dlsym_name;
	/** C type : const void* */
	public Pointer dlsym_ptr;
	public snd_dlsym_link() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("next", "dlsym_name", "dlsym_ptr");
	}
	/**
	 * @param next C type : snd_dlsym_link*<br>
	 * @param dlsym_name C type : const char*<br>
	 * @param dlsym_ptr C type : const void*
	 */
	public snd_dlsym_link(snd_dlsym_link.ByReference next, Pointer dlsym_name, Pointer dlsym_ptr) {
		super();
		this.next = next;
		this.dlsym_name = dlsym_name;
		this.dlsym_ptr = dlsym_ptr;
	}
	public snd_dlsym_link(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends snd_dlsym_link implements Structure.ByReference {
		
	};
	public static class ByValue extends snd_dlsym_link implements Structure.ByValue {
		
	};
}
