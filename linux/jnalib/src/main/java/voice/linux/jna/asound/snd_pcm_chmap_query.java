package voice.linux.jna.asound;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class snd_pcm_chmap_query extends Structure {
	/**
	 * @see snd_pcm_chmap_type<br>
	 * < channel map type<br>
	 * C type : snd_pcm_chmap_type
	 */
	public int type;
	/**
	 * < available channel map<br>
	 * C type : snd_pcm_chmap_t
	 */
	public snd_pcm_chmap map;
	public snd_pcm_chmap_query() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("type", "map");
	}
	/**
	 * @param type @see snd_pcm_chmap_type<br>
	 * < channel map type<br>
	 * C type : snd_pcm_chmap_type<br>
	 * @param map < available channel map<br>
	 * C type : snd_pcm_chmap_t
	 */
	public snd_pcm_chmap_query(int type, snd_pcm_chmap map) {
		super();
		this.type = type;
		this.map = map;
	}
	public snd_pcm_chmap_query(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends snd_pcm_chmap_query implements Structure.ByReference {
		
	};
	public static class ByValue extends snd_pcm_chmap_query implements Structure.ByValue {
		
	};
}
