package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\rfcomm.h:58</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class rfcomm_dev_list_req extends Structure {
	public short dev_num;
	/** C type : rfcomm_dev_info[0] */
	public rfcomm_dev_info[] dev_info = new rfcomm_dev_info[0];
	public rfcomm_dev_list_req() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("dev_num", "dev_info");
	}
	/** @param dev_info C type : rfcomm_dev_info[0] */
	public rfcomm_dev_list_req(short dev_num, rfcomm_dev_info dev_info[]) {
		super();
		this.dev_num = dev_num;
		if ((dev_info.length != this.dev_info.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dev_info = dev_info;
	}
	public rfcomm_dev_list_req(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends rfcomm_dev_list_req implements Structure.ByReference {
		
	};
	public static class ByValue extends rfcomm_dev_list_req implements Structure.ByValue {
		
	};
}
