package voice.linux.jna.bluetooth;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class inquiry_cp extends Structure<inquiry_cp, inquiry_cp.ByValue, inquiry_cp.ByReference > {
	/** C type : uint8_t[3] */
	public byte[] lap = new byte[3];
	/** 1.28s units */
	public byte length;
	public byte num_rsp;
	public inquiry_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("lap", "length", "num_rsp");
	}
	/**
	 * @param lap C type : uint8_t[3]<br>
	 * @param length 1.28s units
	 */
	public inquiry_cp(byte lap[], byte length, byte num_rsp) {
		super();
		if ((lap.length != this.lap.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.lap = lap;
		this.length = length;
		this.num_rsp = num_rsp;
	}
	public inquiry_cp(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected inquiry_cp newInstance() { return new inquiry_cp(); }
	public static inquiry_cp[] newArray(int arrayLength) {
		return Structure.newArray(inquiry_cp.class, arrayLength);
	}
	public static class ByReference extends inquiry_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends inquiry_cp implements Structure.ByValue {
		
	};
}
