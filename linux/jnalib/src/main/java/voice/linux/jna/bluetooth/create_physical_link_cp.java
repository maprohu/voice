package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class create_physical_link_cp extends Structure {
	public byte handle;
	public byte key_length;
	public byte key_type;
	/** C type : uint8_t[32] */
	public byte[] key = new byte[32];
	public create_physical_link_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("handle", "key_length", "key_type", "key");
	}
	/** @param key C type : uint8_t[32] */
	public create_physical_link_cp(byte handle, byte key_length, byte key_type, byte key[]) {
		super();
		this.handle = handle;
		this.key_length = key_length;
		this.key_type = key_type;
		if ((key.length != this.key.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.key = key;
	}
	public create_physical_link_cp(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends create_physical_link_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends create_physical_link_cp implements Structure.ByValue {
		
	};
}
