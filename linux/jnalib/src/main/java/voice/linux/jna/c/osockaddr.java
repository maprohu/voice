package voice.linux.jna.c;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * This is the 4.3 BSD `struct sockaddr' format, which is used as wire<br>
 * format in the grotty old 4.3 `talk' protocol.<br>
 * <i>native declaration : ..\voice\local\headers\\usr\include\arm-linux-gnueabihf\sys\socket.h:38</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class osockaddr extends Structure<osockaddr, osockaddr.ByValue, osockaddr.ByReference > {
	public short sa_family;
	/** C type : unsigned char[14] */
	public byte[] sa_data = new byte[14];
	public osockaddr() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("sa_family", "sa_data");
	}
	/** @param sa_data C type : unsigned char[14] */
	public osockaddr(short sa_family, byte sa_data[]) {
		super();
		this.sa_family = sa_family;
		if ((sa_data.length != this.sa_data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.sa_data = sa_data;
	}
	public osockaddr(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected osockaddr newInstance() { return new osockaddr(); }
	public static osockaddr[] newArray(int arrayLength) {
		return Structure.newArray(osockaddr.class, arrayLength);
	}
	public static class ByReference extends osockaddr implements Structure.ByReference {
		
	};
	public static class ByValue extends osockaddr implements Structure.ByValue {
		
	};
}
