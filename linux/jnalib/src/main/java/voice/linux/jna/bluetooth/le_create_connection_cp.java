package voice.linux.jna.bluetooth;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class le_create_connection_cp extends Structure {
	public short interval;
	public short window;
	public byte initiator_filter;
	public byte peer_bdaddr_type;
	/** C type : bdaddr_t */
	public bdaddr_t peer_bdaddr;
	public byte own_bdaddr_type;
	public short min_interval;
	public short max_interval;
	public short latency;
	public short supervision_timeout;
	public short min_ce_length;
	public short max_ce_length;
	public le_create_connection_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("interval", "window", "initiator_filter", "peer_bdaddr_type", "peer_bdaddr", "own_bdaddr_type", "min_interval", "max_interval", "latency", "supervision_timeout", "min_ce_length", "max_ce_length");
	}
	public le_create_connection_cp(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends le_create_connection_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends le_create_connection_cp implements Structure.ByValue {
		
	};
}
