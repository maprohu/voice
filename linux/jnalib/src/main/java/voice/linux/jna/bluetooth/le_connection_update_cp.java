package voice.linux.jna.bluetooth;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class le_connection_update_cp extends Structure<le_connection_update_cp, le_connection_update_cp.ByValue, le_connection_update_cp.ByReference > {
	public short handle;
	public short min_interval;
	public short max_interval;
	public short latency;
	public short supervision_timeout;
	public short min_ce_length;
	public short max_ce_length;
	public le_connection_update_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("handle", "min_interval", "max_interval", "latency", "supervision_timeout", "min_ce_length", "max_ce_length");
	}
	public le_connection_update_cp(short handle, short min_interval, short max_interval, short latency, short supervision_timeout, short min_ce_length, short max_ce_length) {
		super();
		this.handle = handle;
		this.min_interval = min_interval;
		this.max_interval = max_interval;
		this.latency = latency;
		this.supervision_timeout = supervision_timeout;
		this.min_ce_length = min_ce_length;
		this.max_ce_length = max_ce_length;
	}
	public le_connection_update_cp(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected le_connection_update_cp newInstance() { return new le_connection_update_cp(); }
	public static le_connection_update_cp[] newArray(int arrayLength) {
		return Structure.newArray(le_connection_update_cp.class, arrayLength);
	}
	public static class ByReference extends le_connection_update_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends le_connection_update_cp implements Structure.ByValue {
		
	};
}
