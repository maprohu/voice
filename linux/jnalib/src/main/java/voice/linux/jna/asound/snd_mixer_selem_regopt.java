package voice.linux.jna.asound;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * Mixer simple element - register options<br>
 * <i>native declaration : ..\voice\local\headers\\usr\include\alsa\mixer.h:205</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class snd_mixer_selem_regopt extends Structure {
	public int ver;
	/** C type : const char* */
	public Pointer device;
	/** C type : snd_pcm_t* */
	public PointerByReference playback_pcm;
	/** C type : snd_pcm_t* */
	public PointerByReference capture_pcm;
	public snd_mixer_selem_regopt() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ver", "device", "playback_pcm", "capture_pcm");
	}
	/**
	 * @param device C type : const char*<br>
	 * @param playback_pcm C type : snd_pcm_t*<br>
	 * @param capture_pcm C type : snd_pcm_t*
	 */
	public snd_mixer_selem_regopt(int ver, Pointer device, PointerByReference playback_pcm, PointerByReference capture_pcm) {
		super();
		this.ver = ver;
		this.device = device;
		this.playback_pcm = playback_pcm;
		this.capture_pcm = capture_pcm;
	}
	public snd_mixer_selem_regopt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends snd_mixer_selem_regopt implements Structure.ByReference {
		
	};
	public static class ByValue extends snd_mixer_selem_regopt implements Structure.ByValue {
		
	};
}
