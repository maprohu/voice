package voice.linux.jna.bluetooth;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bluetooth\hci.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class set_event_flt_cp extends Structure<set_event_flt_cp, set_event_flt_cp.ByValue, set_event_flt_cp.ByReference > {
	public byte flt_type;
	public byte cond_type;
	/** C type : uint8_t[0] */
	public byte[] condition = new byte[0];
	public set_event_flt_cp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("flt_type", "cond_type", "condition");
	}
	/** @param condition C type : uint8_t[0] */
	public set_event_flt_cp(byte flt_type, byte cond_type, byte condition[]) {
		super();
		this.flt_type = flt_type;
		this.cond_type = cond_type;
		if ((condition.length != this.condition.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.condition = condition;
	}
	public set_event_flt_cp(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected set_event_flt_cp newInstance() { return new set_event_flt_cp(); }
	public static set_event_flt_cp[] newArray(int arrayLength) {
		return Structure.newArray(set_event_flt_cp.class, arrayLength);
	}
	public static class ByReference extends set_event_flt_cp implements Structure.ByReference {
		
	};
	public static class ByValue extends set_event_flt_cp implements Structure.ByValue {
		
	};
}
