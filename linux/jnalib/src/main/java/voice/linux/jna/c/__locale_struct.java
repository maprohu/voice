package voice.linux.jna.c;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.ShortByReference;
import java.util.Arrays;
import java.util.List;
import voice.linux.jna.c.CLibrary.__locale_data;
/**
 * <i>native declaration : ..\voice\local\headers\\usr\include\xlocale.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class __locale_struct extends Structure {
	/**
	 * 13 = __LC_LAST.<br>
	 * C type : __locale_data*[13]
	 */
	public __locale_data[] __locales = new __locale_data[13];
	/** C type : const unsigned short* */
	public ShortByReference __ctype_b;
	/** C type : const int* */
	public IntByReference __ctype_tolower;
	/** C type : const int* */
	public IntByReference __ctype_toupper;
	/** C type : const char*[13] */
	public Pointer[] __names = new Pointer[13];
	public __locale_struct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__locales", "__ctype_b", "__ctype_tolower", "__ctype_toupper", "__names");
	}
	/**
	 * @param __locales 13 = __LC_LAST.<br>
	 * C type : __locale_data*[13]<br>
	 * @param __ctype_b C type : const unsigned short*<br>
	 * @param __ctype_tolower C type : const int*<br>
	 * @param __ctype_toupper C type : const int*<br>
	 * @param __names C type : const char*[13]
	 */
	public __locale_struct(__locale_data __locales[], ShortByReference __ctype_b, IntByReference __ctype_tolower, IntByReference __ctype_toupper, Pointer __names[]) {
		super();
		if ((__locales.length != this.__locales.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__locales = __locales;
		this.__ctype_b = __ctype_b;
		this.__ctype_tolower = __ctype_tolower;
		this.__ctype_toupper = __ctype_toupper;
		if ((__names.length != this.__names.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__names = __names;
	}
	public __locale_struct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends __locale_struct implements Structure.ByReference {
		
	};
	public static class ByValue extends __locale_struct implements Structure.ByValue {
		
	};
}
