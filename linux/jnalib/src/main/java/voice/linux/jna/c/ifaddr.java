package voice.linux.jna.c;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Union;
import voice.linux.jna.c.CLibrary.iface;
/**
 * The ifaddr structure contains information about one address of an<br>
 * interface.  They are maintained by the different address families,<br>
 * are allocated and attached when an address is set, and are linked<br>
 * together so all addresses for an interface can be located.<br>
 * <i>native declaration : net/if.h:86</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("c") 
public abstract class ifaddr extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : sockaddr (Unsupported type) */
	/** C type : ifa_ifu_union */
	@Field(1) 
	public ifaddr.ifa_ifu_union ifa_ifu() {
		return this.io.getNativeObjectField(this, 1);
	}
	/** C type : ifa_ifu_union */
	@Field(1) 
	public ifaddr ifa_ifu(ifaddr.ifa_ifu_union ifa_ifu) {
		this.io.setNativeObjectField(this, 1, ifa_ifu);
		return this;
	}
	/**
	 * Back-pointer to interface.<br>
	 * C type : iface*
	 */
	@Field(2) 
	public Pointer<iface > ifa_ifp() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * Back-pointer to interface.<br>
	 * C type : iface*
	 */
	@Field(2) 
	public ifaddr ifa_ifp(Pointer<iface > ifa_ifp) {
		this.io.setPointerField(this, 2, ifa_ifp);
		return this;
	}
	/**
	 * Next address for interface.<br>
	 * C type : ifaddr*
	 */
	@Field(3) 
	public Pointer<ifaddr > ifa_next() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * Next address for interface.<br>
	 * C type : ifaddr*
	 */
	@Field(3) 
	public ifaddr ifa_next(Pointer<ifaddr > ifa_next) {
		this.io.setPointerField(this, 3, ifa_next);
		return this;
	}
	/** <i>native declaration : net/if.h:89</i> */
	@Union 
	public static abstract class ifa_ifu_union extends StructObject {
		static {
			BridJ.register();
		}
		/** Conversion Error : sockaddr (Unsupported type) */
		/** Conversion Error : sockaddr (Unsupported type) */
	};
}
