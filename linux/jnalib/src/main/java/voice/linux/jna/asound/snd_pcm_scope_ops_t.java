package voice.linux.jna.asound;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class snd_pcm_scope_ops_t extends Structure {
	/** C type : enable_callback* */
	public snd_pcm_scope_ops_t.enable_callback enable;
	/** C type : disable_callback* */
	public snd_pcm_scope_ops_t.disable_callback disable;
	/** C type : start_callback* */
	public snd_pcm_scope_ops_t.start_callback start;
	/** C type : stop_callback* */
	public snd_pcm_scope_ops_t.stop_callback stop;
	/** C type : update_callback* */
	public snd_pcm_scope_ops_t.update_callback update;
	/** C type : reset_callback* */
	public snd_pcm_scope_ops_t.reset_callback reset;
	/** C type : close_callback* */
	public snd_pcm_scope_ops_t.close_callback close;
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface enable_callback extends Callback {
		int apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface disable_callback extends Callback {
		void apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface start_callback extends Callback {
		void apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface stop_callback extends Callback {
		void apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface update_callback extends Callback {
		void apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface reset_callback extends Callback {
		void apply(Pointer scope);
	};
	/** <i>native declaration : ..\voice\local\headers\\usr\include\alsa\pcm.h</i> */
	public interface close_callback extends Callback {
		void apply(Pointer scope);
	};
	public snd_pcm_scope_ops_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("enable", "disable", "start", "stop", "update", "reset", "close");
	}
	/**
	 * @param enable C type : enable_callback*<br>
	 * @param disable C type : disable_callback*<br>
	 * @param start C type : start_callback*<br>
	 * @param stop C type : stop_callback*<br>
	 * @param update C type : update_callback*<br>
	 * @param reset C type : reset_callback*<br>
	 * @param close C type : close_callback*
	 */
	public snd_pcm_scope_ops_t(snd_pcm_scope_ops_t.enable_callback enable, snd_pcm_scope_ops_t.disable_callback disable, snd_pcm_scope_ops_t.start_callback start, snd_pcm_scope_ops_t.stop_callback stop, snd_pcm_scope_ops_t.update_callback update, snd_pcm_scope_ops_t.reset_callback reset, snd_pcm_scope_ops_t.close_callback close) {
		super();
		this.enable = enable;
		this.disable = disable;
		this.start = start;
		this.stop = stop;
		this.update = update;
		this.reset = reset;
		this.close = close;
	}
	public snd_pcm_scope_ops_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends snd_pcm_scope_ops_t implements Structure.ByReference {
		
	};
	public static class ByValue extends snd_pcm_scope_ops_t implements Structure.ByValue {
		
	};
}
